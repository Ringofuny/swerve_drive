#pragma once
/*-----------------------------main関数でやる初期設定群------------------------------*/
void rise_fall(); //* エンコーダーの立ち上がり立ち下がりの設定
void setPwm_period(); //* pwmの周期の設定
/*-----------------------------main関数でやる初期設定群------------------------------*/

/*-----------------------------初期位置設定の塊------------------------------*/
bool currentButtonStat[4] = {false, false, false, false};
bool prebtn[4] = {false, false, false, false};
bool Mode = false;
int check = 0;
void initial_set();
/*-----------------------------初期位置設定の塊------------------------------*/

/*-----------------------------通信失敗時の全停止関数------------------------------*/
void emergency_stop();
/*-----------------------------通信失敗時の全停止関数------------------------------*/

/*------------------------------ニュートラルの設定------------------------------*/
float R[2]; // ニュートラル、コントローラの値を入れる時に使う
float L; // ニュートラル、コントローラの値を入れる時に使う
void setNeutral();
/*------------------------------ニュートラルの設定------------------------------*/

/*-----------------------------角速度調整用------------------------------*/
Ticker speed_tim; //* 角速度調整を周期的やるためのタイマーの宣言
void speed();
/*-----------------------------角速度調整用------------------------------*/

/*------------------------------CAN送信の設定------------------------------*/
CANMessage canMsgSend;
Ticker ticker; // canを周期的やるためのタイマーの宣言
void sendValues();
/*------------------------------CAN送信の設定------------------------------*/

/*------------------------------canの設定（初期化含む）------------------------------*/
void CAN_Setting();
/*------------------------------canの設定（初期化含む）------------------------------*/

/*------------------------------スティックのデータを送る（CAN）------------------------------*/
void inputCAN_SticData();
/*------------------------------スティックのデータを送る（CAN）------------------------------*/

void preparation();